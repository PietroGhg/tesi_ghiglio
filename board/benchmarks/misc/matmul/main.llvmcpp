//MDH WCET
#include "miosix.h"
#include <stdio.h>
#define UPPERLIMIT 50
#define NUMRUNS 200

typedef int matrix [UPPERLIMIT][UPPERLIMIT];
int Seed;
matrix ArrayA, ArrayB, ResultArray;

void Multiply(matrix A, matrix B, matrix Res)
/*
 * Multiplies arrays A and B and stores the result in ResultArray.
 */
{
   int Outer, Inner, Index;

   for (Outer = 0; Outer < UPPERLIMIT; Outer++){
      for (Inner = 0; Inner < UPPERLIMIT; Inner++){
         Res [Outer][Inner] = 0;
         for (Index = 0; Index < UPPERLIMIT; Index++)
            Res[Outer][Inner]  +=
               A[Outer][Index] * B[Index][Inner];
       }
   }
   
   
}

void Initialize(matrix Array)
/*
 * Intializes the given array with random integers.
 */
{
   int OuterIndex, InnerIndex;

   for (OuterIndex = 0; OuterIndex < UPPERLIMIT; OuterIndex++)
      for (InnerIndex = 0; InnerIndex < UPPERLIMIT; InnerIndex++)
	Array[OuterIndex][InnerIndex] = OuterIndex + InnerIndex;
   
}

void Test(matrix A, matrix B, matrix Res) {
  for(int i = 0; i < NUMRUNS; i++){
    Initialize(A);
    Initialize(B);



    Multiply(A, B, Res);
  }


}





int main()
{

   Test(ArrayA, ArrayB, ResultArray);

   for(;;){
     miosix::ledOn();
     miosix::Thread::sleep(1000);
     miosix::ledOff();;
     miosix::Thread::sleep(1000);
     
   }
   return 0;
}

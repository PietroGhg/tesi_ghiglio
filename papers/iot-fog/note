https://github.com/dream-lab/riot-bench
https://scholar.google.com/scholar?hl=it&as_sdt=0%2C5&q=allocation+of+computation+iot&btnG=
https://scholar.google.com/scholar?hl=it&as_sdt=0%2C5&q=energy+efficient+fog+iot+deployment&btnG=

1.
Sensor Control Layer: Sensor Nodes (SN) -> Gateway Node (eGN) -> eNode
Information Processing Layer (cloud): aggregates data from SCL

-eGN predicts sleep intervals of SN with exponential average
 T(n) = a*t(n-1) + (1-a)T(n-1). Predicted value. a depends on the sensor. (periodic ~0.5, trigger ~0)
 t(n) = T(n) + deltaT. Actual sleep value.
-eNode fetches data from the cloud and sends them to eGNs in order to allow prediction of sleep intervals.
 determines allocation of SNs to eGNs.

2.
model resource allocation as matching problem (game theory):
-IoT devices: Users={u1,...,uM}. They may have different requirements wrt to latency/data size.
-Each user ui carries Di (bits) data that corresponds to DCi CPU cycles. Delay requirement Ti.
-Cloud services providers: Sp = {s1,...,sN}.
-For each sj: Fog Nodes FNj={fnj1,...,fnjL}, Radio resources: Wj={wj1,...wjK}, computational resources: Cj={cj1,...,cjL}(cycle rate)

Short delay requirement: offload to cloud, otherwise offload to FN.
Users offer prices to service providers in order to obtain resources: ui offers Oi = a*(Di/Ti).
Find a mapping between users and (radio, computation) of each sp: ui -> (wjk, cjl).
rho(i,j,k,l) = 1 if ui is offloaded to FN fn(j,l) using channel w(k,j) owned by spj.

Service time: Ttrans + Tproc + Trecv. Formula (3).
Problem formulated as MINLP -> NP-Hard. -> Use matching game instead.
Use service time to establish user's preference, offers for SP's preferences.

3.
another game theory formulation:
-cloud server has processing power f0.
-each fog node s has processing power fS.
-each IoT user n has computation task Tn=(zN,yN). zN=size(bits), yN=processing density(cycle/bit)
-offloading indicator a(n,s)=1 if n offloads to s. -> foreach n, sum(s){a(n,s)} <= 1
-connectivity b(n,s)=1 if n in connected to s. -> foreach n,s, a(n,s)<=b(n,s)
-(1) gives total cost for local computing (in fog node) as linear combination of energy + time.
-(4) gives total cost for offloaded computation, requires to know data rate of wireless interface and constant depending on wireless interface.

4.
Formulates latency and bandwidth requirements for each component, software and hardware capabilities for each node and finds a deployment that satisfies it. NP-Hard problem.






